// ==========================================================

// 320 and Up by Andy Clarke
// Version: 3.0
// URL: http://stuffandnonsense.co.uk/projects/320andup/

// Sass Port by Jina Bolton
// URL: http://sushiandrobots.com/

// Apache License: v2.0. http://www.apache.org/licenses/LICENSE-2.0

// ==========================================================

/* Texture =================================================== */

// ALERT ====================================================

.alert {
margin-bottom : $baseline;
padding : 8px 35px 8px 14px;
background-color : $alertcolor;
border : 1px solid darken($alertcolor, 20%);
@include border-radius(2px);
@include sans-serif;
@include font-size(14);
color : darken($alertcolor, 60%); }

.alert-heading {
color : inherit; }

.alert .close {
position : relative;
top : -2px;
right : -21px;
float : right;
@include font-size(21);
font-weight : bold;
line-height : 18px;
color : inherit; }

.alert-success {
background-color : lighten($successcolor, 30%);
border : 1px solid lighten($successcolor, 20%);
color : darken($successcolor, 20%); }

.alert-warning {
background-color : lighten($warningcolor, 30%);
border : 1px solid lighten($warningcolor, 20%);
color : darken($warningcolor, 20%); }

.alert-error {
background-color : lighten($dangercolor, 30%);
border : 1px solid lighten($dangercolor, 20%);
color : $dangercolor; }

.alert-info {
background-color : $infocolor;
border : 1px solid darken($infocolor, 20%);
color : darken($infocolor, 50%); }

.alert-inverse {
background-color : $inverscolor;
border : 1px solid $black;
color : $white; }

.alert-block {
padding-top : 14px;
padding-bottom : 14px; }

.alert-block .alert-heading {
margin-bottom : $baseline / 8;
font-size : inherit;
font-weight : bold; }

.alert-block > p,
.alert-block > ul {
margin-bottom : 0; }

.alert-block p + p {
margin-top : 5px; }

// BADGES ====================================================

.badge {
padding : 1px 9px 2px;
@include font-size(12);
font-weight : bold;
white-space : nowrap;
color : $white;
background-color : $lightgrey;
@include border-radius(9px); }

.badge:hover {
color : $white;
text-decoration : none;
cursor : pointer; }

.badge-error {
background-color : $errorcolor; }

.badge-error:hover {
background-color : darken($errorcolor, 20%); }

.badge-warning {
background-color : $warningcolor; }

.badge-warning:hover {
background-color : darken($warningcolor, 20%); }

.badge-success {
background-color : $successcolor; }

.badge-success:hover {
background-color : darken($successcolor, 20%); }

.badge-info {
background-color : $infocolor;
color : darken($infocolor, 50%); }

.badge-info:hover {
background-color : darken($infocolor, 20%); }

.badge-inverse {
background-color : $inverscolor; }

.badge-inverse:hover {
background-color : darken($inverscolor, 20%); }

// GRADIENTS ====================================================

@mixin greygrad {
background-image : -webkit-gradient(linear, 0 0, 0 100%, from($white), to(darken($lightergrey, 5%)));
background-image : -webkit-linear-gradient(top, $white, darken($lightergrey, 5%));
background-image : -moz-linear-gradient(top, $white darken($lightergrey, 5%));
background-image : -ms-linear-gradient(top, $white, darken($lightergrey, 5%));
background-image : -o-linear-gradient(top, $white, darken($lightergrey, 5%));
background-image : linear-gradient(top, $white, darken($lightergrey, 5%));
background-repeat : repeat-x; }

@mixin linkgrad {
background-image : -webkit-gradient(linear, 0 0, 0 100%, from($linkcolor), to(darken($linkcolor, 10%)));
background-image : -webkit-linear-gradient(top, $linkcolor, darken($linkcolor, 10%));
background-image : -moz-linear-gradient(top, $linkcolor darken($linkcolor, 10%));
background-image : -ms-linear-gradient(top, $linkcolor, darken($linkcolor, 10%));
background-image : -o-linear-gradient(top, $linkcolor, darken($linkcolor, 10%));
background-image : linear-gradient(top, $linkcolor, darken($linkcolor, 10%));
background-repeat : repeat-x; }

@mixin basegrad {
background-image : -webkit-gradient(linear, 0 0, 0 100%, from($basecolor), to(darken($basecolor, 10%)));
background-image : -webkit-linear-gradient(top, $basecolor, darken($basecolor, 10%));
background-image : -moz-linear-gradient(top, $basecolor darken($basecolor, 10%));
background-image : -ms-linear-gradient(top, $basecolor, darken($basecolor, 10%));
background-image : -o-linear-gradient(top, $basecolor, darken($basecolor, 10%));
background-image : linear-gradient(top, $basecolor, darken($basecolor, 10%));
background-repeat : repeat-x; }

@mixin dangergrad {
background-image : -webkit-gradient(linear, 0 0, 0 100%, from($dangercolor), to(darken($dangercolor, 10%)));
background-image : -webkit-linear-gradient(top, $dangercolor, darken($dangercolor, 10%));
background-image : -moz-linear-gradient(top, $dangercolor darken($dangercolor, 10%));
background-image : -ms-linear-gradient(top, $dangercolor, darken($dangercolor, 10%));
background-image : -o-linear-gradient(top, $dangercolor, darken($dangercolor, 10%));
background-image : linear-gradient(top, $dangercolor, darken($dangercolor, 10%));
background-repeat : repeat-x; }

@mixin infograd {
background-image : -webkit-gradient(linear, 0 0, 0 100%, from($infocolor), to(darken($infocolor, 10%)));
background-image : -webkit-linear-gradient(top, $infocolor, darken($infocolor, 10%));
background-image : -moz-linear-gradient(top, $infocolor darken($infocolor, 10%));
background-image : -ms-linear-gradient(top, $infocolor, darken($infocolor, 10%));
background-image : -o-linear-gradient(top, $infocolor, darken($infocolor, 10%));
background-image : linear-gradient(top, $infocolor, darken($infocolor, 10%));
background-repeat : repeat-x; }

@mixin inversegrad {
background-image : -webkit-gradient(linear, 0 0, 0 100%, from($inverscolor), to(darken($inverscolor, 10%)));
background-image : -webkit-linear-gradient(top, $inverscolor, darken($inverscolor, 10%));
background-image : -moz-linear-gradient(top, $inverscolor darken($inverscolor, 10%));
background-image : -ms-linear-gradient(top, $inverscolor, darken($inverscolor, 10%));
background-image : -o-linear-gradient(top, $inverscolor, darken($inverscolor, 10%));
background-image : linear-gradient(top, $inverscolor, darken($inverscolor, 10%));
background-repeat : repeat-x; }

@mixin successgrad {
background-image : -webkit-gradient(linear, 0 0, 0 100%, from($successcolor), to(darken($successcolor, 10%)));
background-image : -webkit-linear-gradient(top, $successcolor, darken($successcolor, 10%));
background-image : -moz-linear-gradient(top, $successcolor darken($successcolor, 10%));
background-image : -ms-linear-gradient(top, $successcolor, darken($successcolor, 10%));
background-image : -o-linear-gradient(top, $successcolor, darken($successcolor, 10%));
background-image : linear-gradient(top, $successcolor, darken($successcolor, 10%));
background-repeat : repeat-x; }

@mixin warninggrad {
background-image : -webkit-gradient(linear, 0 0, 0 100%, from($warningcolor), to(darken($warningcolor, 10%)));
background-image : -webkit-linear-gradient(top, $warningcolor, darken($warningcolor, 10%));
background-image : -moz-linear-gradient(top, $warningcolor darken($warningcolor, 10%));
background-image : -ms-linear-gradient(top, $warningcolor, darken($warningcolor, 10%));
background-image : -o-linear-gradient(top, $warningcolor, darken($warningcolor, 10%));
background-image : linear-gradient(top, $warningcolor, darken($warningcolor, 10%));
background-repeat : repeat-x; }

// For additional gradients see: https://github.com/twitter/bootstrap/blob/master/less/mixins.less

// WELL ====================================================

.well {
min-height : 21px;
padding : 11px;
margin-bottom : $baseline;
background-color : lighten($basecolor, 75%);
border : 1px solid lighten($basecolor, 60%);
@include border-radius(4px);
@include box-shadow(0 1px 11px rgba(0,0,0,.15) inset); }

.well-large {
padding : 22px; }

.well-small {
padding : 6px;
@include border-radius(2px); }

.well p:last-child {
margin-bottom : 0; }